import styles from '../styles/Home.module.css'
import Head from 'next/head'
import {useState, useEffect, useRef} from 'react'
import store from '../redux/store'
import ContentWrapper from '../components/home/contentWrapper';
import SendTweet from '../components/home/sendTweet';
import Tweet from '../components/home/tweet';
import Trends from '../components/home/trends';
import {useSelector} from 'react-redux'
import { addNewTweet, fetchTweets, like } from '../redux/reducers/tweetsReducer'
import { logout } from '../redux/reducers/userReducer'


// import Image from 'next/image'

export default function Home() {
  const [tweet, setTweet] = useState('')
  const [tweets, setTweets] = useState([])
  const state = useSelector(state => state.tweets)
  const user = useSelector(state => state.user)
  const tweetText = useRef("");
  const [placeholderState, setPlaceholderState] = useState(true)
  const letter = user.info ? user.info.username[0].toUpperCase() : undefined;

  useEffect(() => {
    if(user.jwt !== undefined){
      store.dispatch(fetchTweets({jwt: user.jwt}))
    } 
  }, [user])

  useEffect(() => {
    console.log([...state.tweets])
    if(user.jwt !== undefined){
      const myTweets = [...state.tweets] 
      setTweets(myTweets.reverse())
    } 
        
  }, [state])

  const sendTweet = () => {
    const str = tweetText.current.replaceAll('<div>','').replaceAll('</div>','').replaceAll('<br>',' ')
    store.dispatch(addNewTweet({
      content: str,
      author: user.info.email,
      username: user.info.username,
      authorId: user.info.id,
      jwt: user.jwt
    }))
    
  }

  const handleChange = evt => {
      tweetText.current = evt.target.value;
      if(tweetText.current === '<br>' || tweetText.current === ''){
          setPlaceholderState(true)
      } else {
          setPlaceholderState(false)
      }
  };

  const clickLogout = () => {
    store.dispatch(logout())
  }

  const likeClick = ({tweetId}) => {
    console.log('here')
    store.dispatch(like({
      tweetId: tweetId,
      userId: user.info.id,
      jwt: user.jwt,
    }))
  }

  return (
    <>
      <Head>
        <title>Twitter</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/twitter.png" />
      </Head>
        
      <ContentWrapper>
        <div className={styles['home_content-section_title']}>
          <h3 onClick={clickLogout}>Home</h3>
        </div>
        <SendTweet setTweet={(val)=>setTweet(val)} letter={letter} tweet={tweet} placeholderState={placeholderState} sendTweet={sendTweet} text={tweetText.current} handleChange={handleChange}/>
        {tweets.map((item, key)=> 
          <Tweet tweetInfo={item} key={key} like={(id)=>likeClick(id)}/>
        )}
      </ContentWrapper>
      <div className={styles['home_propose-section']}>
        <div className={styles['home_propose-section_input']}>
          <input placeholder="Search Twitter"/>
        </div>
        <Trends/>
      </div>
    </>
  )
}
