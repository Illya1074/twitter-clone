import style from '../../styles/Home.module.css'
import React, { useState, useEffect, useRef } from 'react'
import Head from 'next/head'
import ContentWrapper from '../../components/home/contentWrapper';
import Trends from '../../components/home/trends';
import {useSelector} from 'react-redux'
import store from '../../redux/store'
import { updateProfile } from '../../redux/reducers/userReducer'
import { fetchTweets } from '../../redux/reducers/tweetsReducer'
import axios from 'axios';
import ProfileInfoSection from '../../components/profile/profileInfoSection';
import EditSection from '../../components/profile/editSection';
import Sidebar from '../../components/sidebar/sidebar';
import styles from '../../styles/Home.module.css'
// import Image from 'next/image'

export default function Home() {
  const [tweets, setTweets] = useState([])
  const user = useSelector(state => state.user)
  const [editSec, setEditSec] = useState(false)
  const letter = user.info ? user.info.username[0].toLowerCase() : undefined;
  const state = useSelector(state => state.tweets)
  const [profile, setProfile] = useState({
    location: '',
    desc: '',
    username: '',
  })
  const textUsername = useRef("");
  const textBio= useRef("");
  const textLoc = useRef("");

  useEffect(() => {
      if(user.jwt !== undefined){
        store.dispatch(fetchTweets({jwt: user.jwt}))
      } 
  }, [user])

  useEffect(() => {
    const myTweets = [...state.tweets] 
    setTweets(myTweets.reverse())
    return () => {
      setTweets([]); // This worked for me
    }; 
  }, [state])

  useEffect(() => {
    textUsername.current = user.info.username || ''
    textBio.current = user.info.desc || ''
    textLoc.current = user.info.location || ''

    axios.post(process.env.ENDPOINT+'/get-user',{
      email: user.info.email,
    },{
      headers: {
        Authorization: `Bearer ${user.jwt}`
      }
    })
    .then(res => {
      console.log(res)
      setProfile({
        location: res.data.location,
        desc: res.data.desc,
        username: res.data.username,
      })
    })
  }, [user])

  const clickUpdateProfile = () => {
    
    store.dispatch(updateProfile({
      email: user.info.email,
      location: textLoc.current.replace('<br>',''),
      desc: textBio.current.replace('<br>',''),
      username: textUsername.current.replace('<br>',''),
      jwt: user.jwt
    }))

    setEditSec(false)
  }

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/twitter.png" />
      </Head>
      { editSec ?
        <EditSection textUsername={textUsername} textBio={textBio} textLoc={textLoc} 
          setEditSec={()=>setEditSec(false)} updateProfile={clickUpdateProfile}/>
        : 
        null
      }
      <div className={styles.container}>
        <main className={styles.home}>
          <Sidebar letter={letter}/>
          <ContentWrapper>
            <ProfileInfoSection edit={()=>setEditSec(true)} profile={profile}/> 
          </ContentWrapper>
          <div className={style['home_propose-section']}>
            <div className={style['home_propose-section_input']}>
              <input placeholder="Search Twitter"/>
            </div>
            <Trends/>
          </div>
        </main>
      </div>
    </>
  )
}
